apiVersion: batch/v1
kind: Job
metadata:
  name: mongo-init
  namespace: secretpass
spec:
  backoffLimit: 3
  template:
    spec:
      containers:
        - name: mongo-init
          image: mongo:7.0
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: secretspass-credentials
                  key: MONGO_INITDB_ROOT_USERNAME
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secretspass-credentials
                  key: MONGO_INITDB_ROOT_PASSWORD
          command:
            - bash
            - -c
            - |
              set -e
              replicas=2
              for i in $(seq 0 $((replicas - 1))); do
                host="mongodb-$i.mongodb-service.secretpass.svc.cluster.local"
                until mongosh --host $host --eval "db.adminCommand('ping')" &>/dev/null; do
                  echo "Waiting for $host..."
                  sleep 2
                done
              done

              echo "Initiating replica set..."
              mongosh --host mongodb-0.mongodb-service.secretpass.svc.cluster.local --eval '
                rs.initiate({
                  _id: "rs0",
                  members: [
                    { _id: 0, host: "mongodb-0.mongodb-service.secretpass.svc.cluster.local:27017" },
                    { _id: 1, host: "mongodb-1.mongodb-service.secretpass.svc.cluster.local:27017" }
                  ]
                });
              '

              echo "Creating root user..."
              mongosh --host mongodb-0.mongodb-service.secretpass.svc.cluster.local --eval "
                use admin;
                db.createUser({
                  user: '$MONGO_INITDB_ROOT_USERNAME',
                  pwd: '$MONGO_INITDB_ROOT_PASSWORD',
                  roles: [ { role: 'root', db: 'admin' } ]
                });
              "
      restartPolicy: OnFailure
