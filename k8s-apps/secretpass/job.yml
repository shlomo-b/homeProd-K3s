apiVersion: batch/v1
kind: Job
metadata:
  name: mongo-init
  namespace: secretpass
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  backoffLimit: 4
  template:
    spec:
      containers:
        - name: mongo-init
          image: mongo:7.0
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: secretspass-credentials
                  key: MONGO_INITDB_ROOT_USERNAME
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secretspass-credentials
                  key: MONGO_INITDB_ROOT_PASSWORD
          command:
            - bash
            - -c
            - |
              echo "üîÑ Waiting for all MongoDB pods to be ready..."
              for host in mongodb-0 mongodb-1 mongodb-2; do
                until mongosh --host $host.mongodb-service.secretpass.svc.cluster.local --eval "db.adminCommand('ping')" &>/dev/null; do
                  echo "‚è≥ Waiting for $host to be ready..."
                  sleep 2
                done
              done

              echo "üîç Checking if replica set already exists..."
              REPLICA_OK=$(mongosh --quiet --host mongodb-0.mongodb-service.secretpass.svc.cluster.local --eval "try { rs.status().ok } catch (e) { 0 }")

              if [ "$REPLICA_OK" = "1" ]; then
                echo "‚úÖ Replica set already exists. Skipping initialization."
              else
                echo "üöÄ Initiating replica set..."
                mongosh --host mongodb-0.mongodb-service.secretpass.svc.cluster.local --eval '
                  rs.initiate({
                    _id: "rs0",
                    members: [
                      { _id: 0, host: "mongodb-0.mongodb-service.secretpass.svc.cluster.local:27017" },
                      { _id: 1, host: "mongodb-1.mongodb-service.secretpass.svc.cluster.local:27017" }                    ]
                  })
                '
              fi

              echo "üë§ Creating root user..."
              mongosh --host mongodb-0.mongodb-service.secretpass.svc.cluster.local --eval "
                use admin;
                db.createUser({
                  user: '$MONGO_INITDB_ROOT_USERNAME',
                  pwd: '$MONGO_INITDB_ROOT_PASSWORD',
                  roles: [ { role: 'root', db: 'admin' } ]
                });
              "
      restartPolicy: OnFailure
