apiVersion: batch/v1
kind: Job
metadata:
  name: mongo-init
  namespace: secretpass
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  backoffLimit: 4
  template:
    spec:
      restartPolicy: OnFailure
      containers:
        - name: mongo-init
          image: mongo:7.0
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: secretspass-credentials
                  key: MONGO_INITDB_ROOT_USERNAME
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secretspass-credentials
                  key: MONGO_INITDB_ROOT_PASSWORD
          command:
            - bash
            - -c
            - |
              set -e
              replicas=2

              echo "üîÑ Waiting for all MongoDB pods (0 to $((replicas - 1))) to be ready..."
              for i in $(seq 0 $((replicas - 1))); do
                host="mongodb-$i"
                until mongosh --host $host.mongodb-service.secretpass.svc.cluster.local --eval "db.adminCommand('ping')" &>/dev/null; do
                  echo "‚è≥ Waiting for $host to be ready..."
                  sleep 2
                done
              done

              echo "üîç Checking if replica set already exists..."
              REPLICA_OK=$(mongosh --quiet --host mongodb-0.mongodb-service.secretpass.svc.cluster.local --eval "try { rs.status().ok } catch (e) { 0 }")

              if [ "$REPLICA_OK" = "1" ]; then
                echo "‚úÖ Replica set already exists. Skipping initialization."
              else
                echo "üöÄ Initiating replica set..."
                members=""
                for i in $(seq 0 $((replicas - 1))); do
                  host="mongodb-$i.mongodb-service.secretpass.svc.cluster.local:27017"
                  members="$members{ _id: $i, host: \"$host\" },"
                done
                members="${members%,}"

                mongosh --host mongodb-0.mongodb-service.secretpass.svc.cluster.local --eval "
                  rs.initiate({
                    _id: 'rs0',
                    members: [ $members ]
                  })
                "
              fi

              echo "üë§ Checking if root user already exists..."
              USER_EXISTS=$(mongosh --quiet --host mongodb-0.mongodb-service.secretpass.svc.cluster.local/admin --eval "db.getUser('$MONGO_INITDB_ROOT_USERNAME')")

              if [ "$USER_EXISTS" = "null" ]; then
                echo "üë§ Creating root user..."
                mongosh --host mongodb-0.mongodb-service.secretpass.svc.cluster.local/admin --eval "
                  db.createUser({
                    user: '$MONGO_INITDB_ROOT_USERNAME',
                    pwd: '$MONGO_INITDB_ROOT_PASSWORD',
                    roles: [ { role: 'root', db: 'admin' } ]
                  });
                "
              else
                echo "‚úÖ Root user already exists. Skipping creation."
              fi