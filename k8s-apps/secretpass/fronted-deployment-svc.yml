apiVersion: apps/v1
kind: Deployment
metadata:
  name: fronted-secretpass
  namespace: secretpass
  # annotations:
  #   # annotations for keel to update the image
  #   keel.sh/policy: "all"
  #   keel.sh/trigger: "poll"
  #   keel.sh/pollSchedule: "@every 3m"
spec:
  revisionHistoryLimit: 0
 # replicas: 2
  selector:
    matchLabels:
      app: fronted
  template:
    metadata:
      labels:
        app: fronted
    spec:
      # topologySpreadConstraints:
      #   - maxSkew: 1
      #     topologyKey: "kubernetes.io/hostname"
      #     whenUnsatisfiable: ScheduleAnyway
      #     labelSelector:
      #       matchLabels:
      #         app: react-app    16167211712
      containers:
      - name: fronted
        image: shlomobarzili/secretpass-frontend:v2.4.0
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP

        resources:
          requests:
            cpu: 250m
            memory: 1.5Gi
          limits:
            cpu: 1
            memory: 2Gi

        env:
          - name: REACT_APP_API_URL
            valueFrom:
              configMapKeyRef:
                name: secretpass-config
                key: REACT_APP_API_URL

          - name: REACT_APP_ENABLE_SAML
            valueFrom:
              configMapKeyRef:
                name: secretpass-config
                key: REACT_APP_ENABLE_SAML

        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          failureThreshold: 2

        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 10
          failureThreshold: 3

---
apiVersion: v1
kind: Service
metadata:
  name: fronted-svc
  namespace: secretpass
spec:
  selector:
    app: fronted
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 3000   # the port svc that expose
      targetPort: 3000 # the port of the pod