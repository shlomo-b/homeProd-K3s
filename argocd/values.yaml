#argo-cd:
global:
  domain: argocd.spider.local

configs:
  params:
    server.insecure: false
  cm:
    # SSO Configuration via AzureAd
    url: https://argocd.spider.local
    dex.config: |
        logger:
          level: debug
          format: json
        connectors:
        - type: saml
          id: saml
          name: saml
          config:
            entityIssuer: https://argocd.spider.local/api/dex/callback
            ssoURL: https://login.microsoftonline.com/a2724ae3-73eb-4b45-ba62-f432da279e2c/saml2
            ca: /etc/dex/certs/ca.crt
            redirectURI: https://argocd.spider.local/api/dex/callback
            usernameAttr: http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name
            emailAttr: http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name

  # RBAC for application argo cd
  rbac:
    policy.default: role:admin
    policy.csv: |
      p, role:role:admin, *, *, *, allow
      g, "Shlomo_lab@spider-shlomo.com", role:admin
      g, "AlinaB@spider-shlomo.com", role:admin

server:
  service:
    type: LoadBalancer
    servicePortHttp: 80
    servicePortHttps: 443
    servicePortHttpName: http
    servicePortHttpsName: https
    loadBalancerClass: ""
    loadBalancerIP: "172.18.0.252"

# responsible for authenticating users    
dex:
  volumes:
    - name: sso-cert
      secret:
        secretName: argocd-sso-cert # reference the secret name 

    - name: trusted
      secret: 
        secretName: secret-trusted-argocd # Reference the Secret name    

  # Mount the SSO certificate to Dex, making it available in the container     
  volumeMounts:
    - name: sso-cert
      mountPath: /etc/dex/certs
      readOnly: true

    - name: trusted
      mountPath: /etc/dex/certs
      readOnly: true